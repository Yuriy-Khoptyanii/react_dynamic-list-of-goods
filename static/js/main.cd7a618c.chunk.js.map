{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","handleClickLoadGoods","listOfGoods","Button","variant","type","onClick","sort","good1","good2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"uOAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,qBAAKC,UAAU,OAAf,SACE,6BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAH1B,SAKGF,EAAKG,MAJDH,EAAKI,YCRb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICFMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAce,EAAd,KAEMC,EAAuB,SAACC,GAAD,OAC3BA,EACGP,KAAKK,IAGV,OACE,sBAAKd,UAAU,MAAf,UACE,uDAEA,sBAAKA,UAAU,UAAf,UACE,cAACiB,EAAA,EAAD,CACEC,QAAQ,YACRd,MAAM,UACNe,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAqBR,MALtC,4BAUA,cAACU,EAAA,EAAD,CACEC,QAAQ,YACRd,MAAM,UACNe,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EDzBhBR,IACJE,MAAK,SAAAV,GACJ,OAAOA,EACJsB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMjB,KAAKmB,cAAcD,EAAMlB,SACtDoB,MAAM,EAAG,QCgBV,gCAUA,cAACR,EAAA,EAAD,CACEC,QAAQ,YACRd,MAAM,UACNe,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,ED1BhBR,IACJE,MAAK,SAAAV,GACJ,OAAOA,EAAM2B,QAAO,SAAAxB,GAAI,MAAmB,QAAfA,EAAKE,cCmB/B,+BAWF,cAAC,EAAD,CAAWL,MAAOA,QCjDxB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd7a618c.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\nimport './App.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"List\">\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          style={{ color: `${good.color}` }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return goods\n        .sort((good1, good2) => good1.name.localeCompare(good2.name))\n        .slice(0, 5);\n    });\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(good => good.color === 'red');\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Button } from '@mui/material';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRed } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleClickLoadGoods = (listOfGoods: Promise<Good[]>) => (\n    listOfGoods\n      .then(setGoods)\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <div className=\"Buttons\">\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => handleClickLoadGoods(getAll())}\n        >\n          Load all goods\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => handleClickLoadGoods(get5First())}\n        >\n          Load 5 first goods\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => handleClickLoadGoods(getRed())}\n        >\n          Load red goods\n        </Button>\n      </div>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}